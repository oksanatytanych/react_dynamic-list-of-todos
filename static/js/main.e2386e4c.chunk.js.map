{"version":3,"sources":["api.ts","types/FilterParams.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterParams","TodoList","React","memo","todos","selectedTodo","changeSelectedTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","filterParam","changeParams","querry","querryChange","deletequerry","value","onChange","all","active","placeholder","style","pointerEvents","Loader","TodoModal","clearsetSelectedTodo","useState","loadingUser","setLoadingUser","user","setUser","useEffect","userId","item","href","email","name","App","setTodos","loadingTodos","setLoadingTodos","filterBy","setFilterBy","setQuerry","setSelectedTodo","items","filtredTodos","filter","toLowerCase","includes","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2386e4c.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterParams {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  changeSelectedTodo: (item: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  selectedTodo,\n  changeSelectedTodo = () => {},\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': todo.id === selectedTodo?.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => changeSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={`far ${todo.id === selectedTodo?.id ? 'fa-eye-slash' : 'fa-eye'}`} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { FilterParams } from '../../types/FilterParams';\n\ntype Props = {\n  filterParam: FilterParams,\n  changeParams: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  querry: string,\n  querryChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  deletequerry: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterParam,\n  changeParams = () => {},\n  querry,\n  querryChange = () => {},\n  deletequerry = () => {},\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterParam}\n            onChange={changeParams}\n          >\n            <option value={FilterParams.all}>All</option>\n            <option value={FilterParams.active}>Active</option>\n            <option value={FilterParams.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={querry}\n          onChange={querryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {querry && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={deletequerry}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  clearsetSelectedTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  clearsetSelectedTodo = () => {},\n}) => {\n  const [loadingUser, setLoadingUser] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setLoadingUser(true);\n\n    getUser(todo.userId).then(item => {\n      setUser(item);\n      setLoadingUser(false);\n    });\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loadingUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={clearsetSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { FilterParams } from './types/FilterParams';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loadingTodos, setLoadingTodos] = useState(false);\n\n  const [filterBy, setFilterBy] = useState<FilterParams>(FilterParams.all);\n  const [querry, setQuerry] = useState('');\n\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const handlefilterParChange = (event: React.ChangeEvent<HTMLSelectElement>) => setFilterBy(event.target.value as FilterParams);\n  const handleQuerryChange = (event: React.ChangeEvent<HTMLInputElement>) => setQuerry(event.target.value);\n\n  const clearQuerryFild = () => {\n    setQuerry('');\n    setFilterBy(FilterParams.all);\n  };\n\n  useEffect(() => {\n    setLoadingTodos(true);\n\n    getTodos().then(items => {\n      setTodos(items);\n      setLoadingTodos(false);\n    });\n  }, []);\n\n  const filtredTodos = todos\n    .filter(todo => {\n      switch (filterBy) {\n        case FilterParams.completed:\n          return todo.completed;\n        case FilterParams.active:\n          return !todo.completed;\n        default:\n          return true;\n      }\n    })\n    .filter(todo => {\n      if (querry) {\n        // const searchValue = querry.split(' ').filter(word => word).join(' ');\n\n        return todo.title.toLowerCase().includes(querry.toLowerCase());\n      }\n\n      return true;\n    });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterParam={filterBy}\n                changeParams={handlefilterParChange}\n                querry={querry}\n                querryChange={handleQuerryChange}\n                deletequerry={clearQuerryFild}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loadingTodos ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filtredTodos}\n                  selectedTodo={selectedTodo}\n                  changeSelectedTodo={(item: Todo) => setSelectedTodo(item)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          clearsetSelectedTodo={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}